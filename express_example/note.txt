1. defind router
2. defind controller
3. router call controller
3.1 controller call model to read and write data

mongoose la framework xay dung dua tren mongo thao tac voi database.

* chức năng login: sử dụng chuẩn OAUTH v2
- module mã hóa password
    + npm i md5
    + npm i bcrypt
        . python 2.7
        . g ++
        . cách fix (https://catalin.me/how-to-fix-node-js-gyp-err-cant-find-python-executable-python-on-windows/?fbclid=IwAR0ppuB5BTVncdLFOHg-RgxnM5_Z-ZqapxeLoT502YwW0Zq_lQQ0E4KTxjM)
- module gen token (JWT)
    + npm i jsonwebtoken

* cách thực hiện:
1. create user -> hash password right before saving to DB
- Create
- Uppdate
- Get all (remove password)
- Get one

-- lỗi UnhandledPromiseRejectionWarning thiếu try catch khi dùng async await
-- chuẩn token: Bearer <token>

query: tối ưu bảng dùng learn(true) => trả về object thuần => nếu như vậy sẽ không dùng được .save()...
-- await User.findOne({ _id: id }).select('password') chọn ra những trường cần thiết
-- select('password -_id'): loại bỏ trường id
=> có thể user.save()
await User.findOne({ _id: id }).select('password').learn(true)
=> không dùng được user.save();

-- debug trên trình duyệt
"start": "nodemon server.js --exec babel-node --inspect",

--------------------------------------------------------------
-- phân trang
.skip((page - 1) * limit) // bỏ qua
.limit() // giới hạn


1. Bai toan search
- search chay: regex
               index test mongoodb
- search engine: elastich search.

2. Collection relative (quan he giua cac bang)
3. Aggregation mongoose